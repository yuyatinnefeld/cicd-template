name: GitHub CICD Pipeline
on: [push]

jobs:

##### build #########################################################
  build_job_1:
    runs-on: ubuntu-latest
    steps:
      - run: echo "building ${{ env.GITHUB_JOB }}...."

  build_job_2:
    runs-on: ubuntu-latest
    steps:
      - run: echo "building ${{ env.GITHUB_JOB }}...."

##### test #########################################################
  test:
    runs-on: ubuntu-latest
    needs: [build_job_1, build_job_2]
    steps:
      - name: unit test
        run: echo "unit test with pytest...."

      - name: linting check
        run: echo "static code analyze with pylint...."
  
      - name: codestyle check
        run: echo "pycodestyle (pep8) check with flake8...."

      - name: tpye check
        run: echo "static type check with mypy...."

      - name: security check
        run: echo "security check with bandit...."

##### deploy #########################################################

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: deploy dev project
        if: github.ref == 'develop'
        run: echo "This job will run after test is complete for $PROJECT_ID"
        env:
          GCP_APP_BUCKET: "PROJECT_DEV_BUCKET_NAME"
          PROJECT_ID: ${{ secrets.GCP_PROJECT_DEV }}
      
      - name: deploy test project
        if: github.ref == 'release'
        run: echo "This job will run after test is complete for $PROJECT_ID"
        env:
          GCP_APP_BUCKET: "PROJECT_TEST_BUCKET_NAME"
          PROJECT_ID: ${{ secrets.GCP_PROJECT_TEST }}


##### publish #########################################################


##### versioning #########################################################


##### test_production #########################################################




