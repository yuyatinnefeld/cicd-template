variables:
  PYTHON_IMAGE: python:3.9-slim
  CLOUD_SDK_IMAGE: google/cloud-sdk:slim
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

stages:
  - build
  - test
  - deploy
  - publish
  - versioning
  - test_production

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python3 -V
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

##### build #########################################################

build:
  stage: build
  image: ${PYTHON_IMAGE}
  script:
    - pip install --upgrade -r requirements.txt


##### test #########################################################

unittest:
  stage: test
  image: ${PYTHON_IMAGE}
  script:
    - cd app && pytest

linting-check:
  stage: test
  image: ${PYTHON_IMAGE}
  script:
    - pylint app/main.py

pycodestyle-check:
  stage: test
  image: ${PYTHON_IMAGE}
  script:
    - flake8 app/main.py

static-tpye-check:
  stage: test
  image: ${PYTHON_IMAGE}
  script:
    - mypy app/main.py

security-check:
  stage: test
  image: ${PYTHON_IMAGE}
  script:
    - bandit *
    
##### deployment #########################################################

.deploy-image:
  stage: deploy
  image: ${CLOUD_SDK_IMAGE}
  script:
    - gcloud config set project ${PROJECT_ID}
    - gcloud builds submit --tag "eu.gcr.io/${PROJECT_ID}/${REPO}/${IMAGE}:$CI_COMMIT_SHORT_SHA"
    - gcloud run deploy fastapi-backend --image "eu.gcr.io/${PROJECT_ID}/${REPO}/${IMAGE}:$CI_COMMIT_SHORT_SHA" --platform managed --region europe-west1
  when: manual


deploy-dev:
  extends:
    - .deploy-image
  before_script:
    - gcloud auth activate-service-account --key-file ${GCP_SERVICE_ACCOUNT_KEY_DEV}
  variables:
    PROJECT_ID: ${GCP_PROJECT_DEV}
    REPO: yt-repo
    IMAGE: fastapi
  except:
    - master
    - /^release.*$/
    - /^hotfix.*$/
    - tags

deploy-test:
  extends:
    - .deploy-image
  before_script:
    - gcloud auth activate-service-account --key-file ${GCP_SERVICE_ACCOUNT_KEY_TEST}
  variables:
    GCP_APP_BUCKET: "PROJECT_DEV_BUCKET_NAME"
    PROJECT_ID: ${GCP_PROJECT_TEST}
    REPO: yt-repo
    IMAGE: fastapi
  only:
    - /^release.*$/
    - /^hotfix.*$/

deploy-prod:
  extends:
    - .deploy-image
  before_script:
    - gcloud auth activate-service-account --key-file ${GCP_SERVICE_ACCOUNT_KEY_PROD}
  variables:
    GCP_APP_BUCKET: "PROJECT_DEV_BUCKET_NAME"
    PROJECT_ID: ${GCP_PROJECT_PROD}
    REPO: yt-repo
    IMAGE: fastapi
  only:
    - tags
  except:
    - branches


##### publish #########################################################

mkdocs_publish:
  stage: publish
  image: ${PYTHON_IMAGE}
  script:
    - echo "make mkdocs documentation...."
  only:
    - master
  when: manual

artifacts_upload:
  stage: publish
  image: ${PYTHON_IMAGE}
  script:
    - echo "twine upload...."
  only:
    - master
  when: manual

##### test-production #########################################################

.prod_test:
  stage: test_production
  image: ${PYTHON_IMAGE}
  script:
    - echo "execute ${CI_JOB_NAME}...."
  only:
    - master
  when: manual

integration_test:
  extends: .prod_test

api_test:
  extends: .prod_test

security_test:
  extends: .prod_test

##### versioning #########################################################

.increment-version:
  stage: versioning
  image: ${PYTHON_IMAGE}
  script:
    - echo "incrementing ${POSITION} version...."

inc-major:
  extends: .increment-version
  variables:
    POSITION: major
    BRANCH: develop
  only:
    - develop
  when: manual

inc-minor:
  extends: .increment-version
  variables:
    POSITION: minor
    BRANCH: develop
  only:
    - develop
  when: manual

inc-fix:
  extends: .increment-version
  variables:
    POSITION: fix
    BRANCH: ${CI_COMMIT_BRANCH}
  only:
    - /^hotfix.*$/
  when: manual